{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/FIlter/Filter.module.css","App.module.css","Components/api/api.js","Components/Form/Form.js","Components/ContactList/ContactsList.js","Components/FIlter/Filter.js","App.js","redux/store.js","reportWebVitals.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","phonebookApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","addContact","mutation","newContact","url","method","body","name","phone","invalidatesTags","deleteContact","contactId","getFilteredContacts","useGetContactsQuery","useGetFilteredContactsQuery","useDeleteContactMutation","useAddContactMutation","Form","useState","setName","setPhone","isLoading","handleInput","e","target","value","reset","className","s","form","onSubmit","preventDefault","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","label","type","pattern","title","onChange","required","placeholder","input","disabled","button","ContactsList","contacts","onDelete","list","map","contact","list_item","number","id","onClick","Filter","wrapper","App","contactName","setContactName","data","error","isFetching","filteredData","skip","app","currentTarget","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","dispatch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac37bb2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__gXpWU\",\"list_item\":\"ContactList_list_item__19vCz\",\"button\":\"ContactList_button__mygSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__2dKg_\",\"label\":\"Filter_label__1b7bY\",\"input\":\"Filter_input__Zx0RH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__eUoke\",\"title\":\"App_title__2VKXF\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const phonebookApi = createApi({\n  reducerPath: 'phonebookApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://61969f03af46280017e7e1f0.mockapi.io' }),\n  tagTypes:['Contacts-list'],\n  endpoints: (builder) => ({\n    getContacts: builder.query({\n      query: () => `/contacts-list`,\n      providesTags: ['Contacts-list'],\n    }),\n    addContact: builder.mutation({\n      query: (newContact) => ({\n        url: `/contacts-list`,\n        method: 'POST',\n        body: {\n          name: newContact.name,\n          phone: newContact.phone,\n        },\n      }),\n      invalidatesTags: ['Contacts-list'],\n    }),\n    deleteContact: builder.mutation({\n      query: (contactId) => ({\n        url: `/contacts-list/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contacts-list'],\n    }),\n    getFilteredContacts: builder.query({\n      query: (name) => `/contacts-list?name=${name}`,\n      invalidatesTags: ['Contacts-list'],\n    }),\n  }),\n});\n\nexport const {\n  useGetContactsQuery,\n  useGetFilteredContactsQuery,\n  useDeleteContactMutation,\n  useAddContactMutation } = phonebookApi;","import React, { useState} from \"react\";\nimport { toast } from 'react-toastify';\nimport { useAddContactMutation } from '../api/api';\nimport s from './Form.module.css'\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const [addContact, {isLoading}] = useAddContactMutation();\n  \n  const handleInput = e => {\n    const {name, value} = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addContact({ name, phone });\n    reset();\n    toast.success('Contact added!', {\n      position: \"top-center\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    }); \n  }\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n    }\n\n  return (\n    <div className={s.form}>\n            <form onSubmit={handleSubmit}>\n              <label className={s.label}>Name\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  onChange={handleInput}\n                  required\n                  placeholder='add name...'\n                  className={s.input}\n              />\n              </label>\n            <label className={s.label}>Phone number\n              <input\n                type=\"tel\"\n                name=\"number\"\n                value={phone}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                onChange={handleInput}\n                required\n                placeholder='add number...'\n                className={s.input}\n              />\n            </label>\n              <button type=\"submit\" disabled={isLoading} className={s.button} title='Добавить новый контакт'>Add contact</button>\n      </form>\n      \n    </div>\n    \n  )\n};\n\n","import React from \"react\";\nimport s from './ContactList.module.css';\n\nexport default function ContactsList({contacts, onDelete}) {\n  return (\n    <div>\n      <ul className={s.list}>\n                {contacts.map((contact) => (\n                  <li key={contact.id} className={s.list_item}>\n                    <span className={s.name}>{contact.name}</span>\n                    <span className={s.number}>{contact.phone}</span>\n                    <button type=\"button\" id={contact.id} onClick={() => onDelete(contact.id)} className={s.button}>Delete</button>\n                  </li>\n                  \n                )\n                )}\n      </ul>\n    </div>)\n}\n\n","import React from 'react';\n\nimport s from './Filter.module.css';\n\nexport default function Filter({ onChange, value }) {\n\n  return (\n    <div className={s.wrapper}>\n      <label className={s.label}>Find contact\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={value}\n          onChange={onChange}\n          className={s.input}\n          placeholder='find name...'\n        />\n      </label>\n    </div>\n      )    \n};\n  \n","import React, { useState} from 'react';\nimport Form from './Components/Form/Form';\nimport ContactsList from './Components/ContactList/ContactsList';\nimport Filter from './Components/FIlter/Filter';\nimport { useGetContactsQuery, useGetFilteredContactsQuery, useDeleteContactMutation} from './Components/api/api';\nimport s from './App.module.css';\n\nexport default function App() {\n  const [contactName, setContactName] = useState('');\n  const { data, error, isFetching } = useGetContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n  const { data: filteredData } = useGetFilteredContactsQuery(contactName, {\n    skip: contactName === '',\n  });\n\n  const onFilterChange = (e) => {\n    setContactName(e.currentTarget.value);\n  };\n\n  return (\n    <div className={s.app}>\n      <h1 className={s.title}>Phonebook</h1>\n      <Form />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter onChange={onFilterChange} value={contactName} />\n      {error ? (\n        <>Oh no, there was an error</>\n      ) : isFetching ? (\n        <>Loading...</>\n      ) : data && (contactName === '')? (\n          <ContactsList contacts={data} onDelete={deleteContact}/>\n      ) : filteredData && (contactName !== '')? (\n          <ContactsList contacts={filteredData} onDelete={deleteContact}/> \n      ) : null}\n    </div>);\n};\n   ","import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { phonebookApi } from '../Components/api/api';\n\nconst store = configureStore({\n  reducer: {\n    [phonebookApi.reducerPath]: phonebookApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    phonebookApi.middleware,\n  ]\n});\n\nsetupListeners(store.dispatch);\n\nexport default store;\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3ZTou\",\"label\":\"Form_label__2ZKbq\",\"input\":\"Form_input__XJv5l\",\"button\":\"Form_button__3XW4Y\"};"],"sourceRoot":""}